@page "/bills/printbill/{billId:int}"
@using Hotel_App.Service
@using Hotel_App.Data
@using Blazored.LocalStorage
@using Hotel_App.Shared
@using System;
@using Microsoft.JSInterop
@inject HotelService<HoaDon> BillService
@inject HoaDonService CTHoaDonService
@inject HotelService<CTHoaDon> cthdservice;
@inject HotelService<KhachHang> khservice;
@inject HotelService<DichVu> dvservice;
@inject HotelService<TaiKhoan> nvservice;
@inject HotelService<DatPhong> dpservice;
@inject HotelService<PhuongThucThanhToan> ptservice;
@inject HotelService<Phong> phongservice;
@inject HotelService<LoaiPhong> lpservice;
@inject IJSRuntime JSRuntime;
<h3>PrintBill</h3>

<div class="col-12" id="billDetails">

    <h3>Thông tin hóa đơn</h3>
    <SpinLoader IsLoading="isLoading">
        <LoadingTemplate>
            <div class="col-12" style="background-color: lightgray; height:400px; vertical-align:middle">
                <br /><br />
                <Chase Center="true" Color="#c21f13" Size="70px"></Chase>
            </div>
        </LoadingTemplate>
        <ContentTemplate>
            @if (bill == null || nhanVien == null)
            {
                <p>No bill found.</p>
            }
            else
            {


                <tr>
                    <th>Mã hóa đơn:</th>
                    <td>@bill.MaHoaDon</td>
                    <th>   &nbsp;	Mã đặt phòng:</th>
                    <td>          &nbsp;	@datPhong.MaDatPhong</td>
                </tr>
                <tr>
                    <th>Ngày tạo:</th>
                    <td>@bill.NgayTao</td>
                    <th>   &nbsp;	Ngày check in:</th>
                    <td>          &nbsp;	@datPhong.CheckInDate</td>
                </tr>
                <tr>
                    <th>Mã phương thức</th>
                    <td>@pt.TenPhuongThuc</td>

                    <th>   &nbsp;	Ngày check out:</th>
                    <td>          &nbsp;	@datPhong.CheckOutDate</td>
                </tr>
                <tr>
                    <th>Nhân viên</th>
                    <td>@nhanVien.HoTen</td>
                    <th>   &nbsp;	Khách hàng:</th>
                    <td>          &nbsp;	@datPhong.MaKhachHang</td>
                </tr>
                <br />
                <table class="table table-bordered table-striped table-responsive-md">
                    <thead>
                        <tr>
                            <th>Mã dịch vụ</th>
                            <th>Tên dịch vụ</th>
                            <th>Đơn giá</th>
                            <th>Số lượng</th>
                            <th>Tổng tiền</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td>@datPhong.MaPhong</td>
                            <td><i>Gia phong</i></td>
                            <td>1</td>
                            <td>@datPhong.TongTien</td>
                        </tr>
                        @foreach (var cthd in bill.CTHoaDon)
                        {
                            <tr>
                                <td>@cthd.MaDichVu</td>
                                <td>@cthd.dv.TenDichVu</td>
                                <td>@cthd.dv.Gia</td>
                                <td>@cthd.SoLuong</td>
                                <td>@cthd.TongTien</td>
                                
                            </tr>
                        }
                    </tbody>
                </table>
                <b>Tổng tiền: </b> <a>@bill.TongSoTien</a>
            }
        </ContentTemplate>
    </SpinLoader>
    <hr />

    <button class="btn btn-primary" href=@string.Format("/printbill/{0}",bill.MaHoaDon)>Print Bill</button>
</div>
@code {
    [Parameter]
    public int BillId { get; set; }
    public TaiKhoan nhanVien { get; set; }
    public DatPhong datPhong { get; set; }
    public HoaDon bill { get; set; }
    public DichVu dichVu { get; set; }
    public CTHoaDon cthd { get; set; }
    public KhachHang kh { get; set; }
    public Phong room { get; set; }
    public LoaiPhong loaiPhong { get; set; }

    public IEnumerable<DichVu> dvlist { get; set; }
    public PhuongThucThanhToan pt { get; set; }
    public IEnumerable<CTHoaDon> cthdlist { get; set; }
    public bool IsVisible { get; set; }
    public bool Result { get; set; }
    public string RecordName { get; set; }
    public bool IsGridViewFiltered { get; set; }
    public int newQuantity { get; set; }
    bool isLoading = true;

    protected async override Task OnInitializedAsync()
    {
        isLoading = true;
        var task = BillService.GetByIdAsync("https://localhost:44359/api/Bills/details/{0}", BillId);
        GetAllServices();

        cthd = new CTHoaDon();
        GetDetails();
        bill = await task;


        if (bill != null)
        {
            cthdlist = await CTHoaDonService.GetCTHoaDonByMaHoaDon(bill.MaHoaDon);
        }

        isLoading = false; // Set loading indicator to false
    }

    protected async Task GetDetails()
    {
        datPhong = await dpservice.GetByIdAsync("https://localhost:44359/api/DatPhong/GetByID/{0}", BillId);
        nhanVien = await nvservice.GetByIdAsync("https://localhost:44359/api/taikhoan/GetByID/{0}", BillId);
        pt = await ptservice.GetByIdAsync("https://localhost:44359/api/PTTT/GetByID/{0}", BillId);
        // kh = await khservice.GetByIdAsync("https://localhost:44359/api/KhachHang/GetByID/{0}", datPhong.MaKhachHang);



    }

    protected async Task GetAllServices()
    {
        dvlist = await dvservice.GetAllAsync("https://localhost:44359/api/DichVu/GetAll");
    }
    protected async Task UpdateTongTien()
    {

        decimal sum = 0;
        await ReloadDetails();

        foreach (var cthd in bill.CTHoaDon)
        {
            sum += cthd.TongTien;
        }
        sum += datPhong.TongTien;
        await CTHoaDonService.UpdateTotal(BillId, sum);
    }
    protected async Task ReloadDetails()
    {
        bill = await BillService.GetByIdAsync("https://localhost:44359/api/Bills/details/{0}", BillId);
        StateHasChanged();
    }
    private async Task DeleteBillDetail(int Id)
    {
        await cthdservice.DeleteAsync("https://localhost:44359/api/BillDetails/DeleteBillDetail/", Id);
        // LoadBills();
        await ReloadDetails();

        StateHasChanged();
        //throw new Exception("DeleteAuthor");
    }
    private async Task EditBillDetail(int billID, int Id, int newQuantity)
    {
        await CTHoaDonService.UpdateQuantity(BillId, Id, newQuantity);
        // LoadBills();
        await UpdateTongTien();
        await ReloadDetails();
        //throw new Exception("DeleteAuthor");
    }
    private async Task HandleQuantityChange(CTHoaDon cthd)
    {
        // Update cthd.SoLuong with the new value
        newQuantity = cthd.SoLuong;
        // Trigger a re-render or update the database as needed
        await ReloadDetails();
    }
        private async Task PrintBillDetails()
    {
        await JSRuntime.InvokeVoidAsync("printComponent", "#billDetails");
    }
}
<script>
    function printPage() {
        window.print()
    }
    function printComponent(componentSelector) {
        var elementToPrint = document.querySelector(componentSelector);
        if (elementToPrint) {
            var printWindow = window.open('', '_blank');
            printWindow.document.open();
            printWindow.document.write('<html><head><title>Print</title></head><body>');
            printWindow.document.write(elementToPrint.innerHTML);
            printWindow.document.write('</body></html>');
            printWindow.document.close();
            printWindow.print();
            printWindow.close();
        }
    }
</script>
